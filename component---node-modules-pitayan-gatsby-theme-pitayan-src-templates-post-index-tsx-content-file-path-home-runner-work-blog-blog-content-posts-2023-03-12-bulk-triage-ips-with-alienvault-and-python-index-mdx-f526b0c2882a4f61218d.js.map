{"version":3,"file":"component---node-modules-pitayan-gatsby-theme-pitayan-src-templates-post-index-tsx-content-file-path-home-runner-work-blog-blog-content-posts-2023-03-12-bulk-triage-ips-with-alienvault-and-python-index-mdx-f526b0c2882a4f61218d.js","mappings":"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","sources":["webpack://www/./content/posts/2023-03-12-bulk-triage-ips-with-alienvault-and-python/index.mdx","webpack://www/./node_modules/@pitayan/gatsby-theme-pitayan/src/templates/post/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"python-and-alienvault\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#python-and-alienvault\",\n    \"aria-label\": \"python and alienvault permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Python and Alienvault\"), \"\\n\", React.createElement(_components.p, null, \"I recently identified the need to perform a triage on several hundred IPs extracted from a log that was not associated with any SIEM or CTI solution. To address this, I utilized simple scripting techniques to compile the data into a user-friendly list of IPs for Python to interpret. Despite my efforts to locate a suitable tool for this purpose, the majority of my findings consisted of outdated and extensive codebases, making it difficult to pinpoint my specific requirements. As a result, I seized the opportunity to write a simple tool to meet my needs. Although the code may not be aesthetically pleasing, it effectively provides the necessary feedback. I am confident that this code snippet can be of great value to others facing similar challenges, and the best part is that it does not require any prior coding experience to utilize and generate results. Just add in your Alienvault API key and the list of IPs as commented in the code and run it like any other python script.\"), \"\\n\", React.createElement(_components.p, null, \"This script performs a comprehensive analysis of each IP address provided, cross-referencing it with information from AlienVault. Specifically, it examines any suspicious activity within the malware section that occurred within the timeframe defined by the variable lookback (which is currently set to 30 days). Upon completion of the analysis, each IP address is stored in the designated file \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ips.txt</code>\"\n    }\n  }), \".\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> datetime <span class=\\\"token keyword\\\">import</span> datetime<span class=\\\"token punctuation\\\">,</span> timedelta\\n<span class=\\\"token keyword\\\">import</span> json\\n<span class=\\\"token keyword\\\">import</span> requests\\n<span class=\\\"token keyword\\\">import</span> os\\n<span class=\\\"token keyword\\\">import</span> concurrent<span class=\\\"token punctuation\\\">.</span>futures\\n\\nlookback <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">30</span>\\n\\n<span class=\\\"token keyword\\\">import</span> os\\n\\nfilename <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'ips.txt'</span>\\n<span class=\\\"token comment\\\"># Create file if not existing</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>exists<span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'w'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># Insert your AlienVault API key</span>\\nAPI_KEY <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span>\\n\\n<span class=\\\"token comment\\\"># Insert a list of IP addresses to check</span>\\nips <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n\\n\\nOTX_API_ENDPOINT <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"https://otx.alienvault.com/api/v1/indicators/IPv6/{ip}/{malware}\\\"</span>\\nHEADERS <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">\\\"X-OTX-API-KEY\\\"</span><span class=\\\"token punctuation\\\">:</span> API_KEY<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">check_date</span><span class=\\\"token punctuation\\\">(</span>date_str<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    date <span class=\\\"token operator\\\">=</span> datetime<span class=\\\"token punctuation\\\">.</span>strptime<span class=\\\"token punctuation\\\">(</span>date_str<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'T'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'%Y-%m-%d'</span><span class=\\\"token punctuation\\\">)</span>\\n    delta <span class=\\\"token operator\\\">=</span> datetime<span class=\\\"token punctuation\\\">.</span>now<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> date\\n    <span class=\\\"token keyword\\\">if</span> delta <span class=\\\"token operator\\\">&lt;</span> timedelta<span class=\\\"token punctuation\\\">(</span>days<span class=\\\"token operator\\\">=</span>lookback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">True</span>\\n\\ntriage_ips <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">with</span> <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'ips.txt'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'r'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> f<span class=\\\"token punctuation\\\">:</span>\\n    existing_ips <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">set</span><span class=\\\"token punctuation\\\">(</span>f<span class=\\\"token punctuation\\\">.</span>read<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>splitlines<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">with</span> <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'ips.txt'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> f<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">with</span> requests<span class=\\\"token punctuation\\\">.</span>Session<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> session<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">process_ip</span><span class=\\\"token punctuation\\\">(</span>ip<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">if</span> ip <span class=\\\"token keyword\\\">in</span> existing_ips<span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"Skipping </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ip<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\"> as it already exists in the file\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token keyword\\\">return</span>\\n\\n            <span class=\\\"token keyword\\\">try</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">with</span> session<span class=\\\"token punctuation\\\">.</span>get<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"https://otx.alienvault.com/api/v1/indicators/IPv4/</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ip<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">/reputation\\\"</span></span><span class=\\\"token punctuation\\\">,</span> stream<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> reputation<span class=\\\"token punctuation\\\">:</span>\\n                    reputation<span class=\\\"token punctuation\\\">.</span>raise_for_status<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                    reputation_data <span class=\\\"token operator\\\">=</span> reputation<span class=\\\"token punctuation\\\">.</span>json<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token keyword\\\">with</span> session<span class=\\\"token punctuation\\\">.</span>get<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"https://otx.alienvault.com/api/v1/indicators/IPv4/</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ip<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">/malware\\\"</span></span><span class=\\\"token punctuation\\\">,</span> stream<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> malware<span class=\\\"token punctuation\\\">:</span>\\n                    malware<span class=\\\"token punctuation\\\">.</span>raise_for_status<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                    malware_data <span class=\\\"token operator\\\">=</span> malware<span class=\\\"token punctuation\\\">.</span>json<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n                    date_values <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>d<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'date'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token keyword\\\">for</span> d <span class=\\\"token keyword\\\">in</span> malware_data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">]</span>\\n                    <span class=\\\"token keyword\\\">for</span> date <span class=\\\"token keyword\\\">in</span> date_values<span class=\\\"token punctuation\\\">:</span>\\n                        <span class=\\\"token keyword\\\">if</span> check_date<span class=\\\"token punctuation\\\">(</span>date<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n                            triage_ips<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>ip<span class=\\\"token punctuation\\\">)</span>\\n                            <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>ip<span class=\\\"token punctuation\\\">)</span>\\n                            f<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ip<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\\n\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n                            <span class=\\\"token keyword\\\">break</span>\\n            <span class=\\\"token keyword\\\">except</span> requests<span class=\\\"token punctuation\\\">.</span>exceptions<span class=\\\"token punctuation\\\">.</span>HTTPError <span class=\\\"token keyword\\\">as</span> e<span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"Error: </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>e<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\"> for </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ip<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">except</span> json<span class=\\\"token punctuation\\\">.</span>decoder<span class=\\\"token punctuation\\\">.</span>JSONDecodeError<span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"Error: JSON decoding failed for </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>ip<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n        <span class=\\\"token keyword\\\">with</span> concurrent<span class=\\\"token punctuation\\\">.</span>futures<span class=\\\"token punctuation\\\">.</span>ThreadPoolExecutor<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> executor<span class=\\\"token punctuation\\\">:</span>\\n            executor<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">map</span><span class=\\\"token punctuation\\\">(</span>process_ip<span class=\\\"token punctuation\\\">,</span> ips<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Triage these IPs:\\\"</span><span class=\\\"token punctuation\\\">,</span> triage_ips<span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Moving forward, it would be interesting to add a few triage levels based on different lookbacks stored in separate files for 7 days, 14 days and 30 days and possibly avoid duplicates between them (where the most recent IP activity gets precedense).\"), \"\\n\", React.createElement(_components.p, null, \"Any additions or suggestions, please reach out through \", React.createElement(_components.img, {\n    src: \"https://github.com/amestofortytwo/python_snippets\",\n    alt: \"github\"\n  }), \" issues or any other SoMe.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/blog/blog/content/posts/2023-03-12-bulk-triage-ips-with-alienvault-and-python/index.mdx\";\nimport React, {useRef} from \"react\";\nimport {Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {RiArrowLeftLine, RiArrowRightLine} from \"react-icons/ri\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {useLocation} from \"@reach/router\";\nimport DefaultLayout from \"@pitayan/gatsby-theme-pitayan/src/layouts/Default\";\nimport PostMeta from \"@pitayan/gatsby-theme-pitayan/src/components/PostMeta\";\nimport AuthorCard from \"@pitayan/gatsby-theme-pitayan/src/components/AuthorCard\";\nimport SocialSharing from \"@pitayan/gatsby-theme-pitayan/src/components/SocialSharing\";\nimport CategoryTags from \"@pitayan/gatsby-theme-pitayan/src/components/CategoryTags\";\nimport BackToTop from \"@pitayan/gatsby-theme-pitayan/src/components/BackToTop\";\nimport PostAuthors from \"@pitayan/gatsby-theme-pitayan/src/components/PostAuthors\";\nimport SelectionPopup from \"@pitayan/gatsby-theme-pitayan/src/components/SelectionPopup\";\nimport ScrollVisibility from \"@pitayan/gatsby-theme-pitayan/src/components/ScrollVisibility\";\nimport TableOfContents from \"@pitayan/gatsby-theme-pitayan/src/components/TableOfContents\";\nimport {useSiteMetadata} from \"@pitayan/gatsby-theme-pitayan/src/hooks\";\nimport {SOCIAL_RESOURCES} from \"@pitayan/gatsby-theme-pitayan/src/constants\";\nimport PostsGroup from \"@pitayan/gatsby-theme-pitayan/src/components/PostsGroup\";\nconst PostImage = _ref => {\n  let {image} = _ref;\n  return image ? React.createElement(GatsbyImage, {\n    className: \"gatsby-resp-image-image\",\n    image: image,\n    alt: \"\"\n  }) : null;\n};\nconst Post = _ref2 => {\n  let {data: {mdx: {body, tableOfContents, frontmatter: {author: coAuthors, title, date, categories, hero, description, keywords}, fields: {slug}, timeToRead, relatedPosts}}, pageContext: {tableOfContentsLevels, previous, next}, children} = _ref2;\n  const articleRef = useRef(null);\n  const postImage = getImage(hero === null || hero === void 0 ? void 0 : hero.medium);\n  const {siteUrl} = useSiteMetadata();\n  const {href: url} = useLocation();\n  const authors = coAuthors.map(_ref3 => {\n    let {id, yamlId, name, bio, sns} = _ref3;\n    const socialUrls = sns.filter(s => s[0] != \"mailto\" && s[0] != \"url\").map(s => {\n      const network = SOCIAL_RESOURCES[s[0]].url;\n      const profile = s[1];\n      return network + \"/\" + profile;\n    });\n    return {\n      id,\n      yamlId,\n      name,\n      bio,\n      socialUrls\n    };\n  });\n  return React.createElement(DefaultLayout, {\n    postDescription: description,\n    pageImage: postImage.images.fallback.src,\n    pageUrl: \"\" + siteUrl + slug,\n    postTitle: title,\n    pageTitle: title,\n    keywords: keywords,\n    date: date,\n    timeToRead: timeToRead,\n    authors: authors\n  }, React.createElement(SelectionPopup, {\n    ref: articleRef\n  }), React.createElement(\"div\", {\n    className: \"hidden md:block\"\n  }, React.createElement(ScrollVisibility, {\n    className: \"fixed right-[6%] bottom-[6%] flex flex-col justify-center z-50\"\n  }, React.createElement(BackToTop, null))), React.createElement(\"div\", {\n    className: \"max-w-lg md:max-w-2xl mx-auto mb-24\"\n  }, React.createElement(\"h1\", {\n    className: \"text-center\"\n  }, title), React.createElement(PostMeta, {\n    className: \"block mb-4 text-center\",\n    date: date,\n    timeToRead: timeToRead\n  }), React.createElement(\"div\", {\n    className: \"block sm:flex flex-wrap items-center justify-center sm:justify-between\"\n  }, React.createElement(PostAuthors, {\n    data: coAuthors\n  }), React.createElement(SocialSharing, {\n    url: url,\n    title: title,\n    hashtags: categories.join(\",\"),\n    description: description,\n    className: \"space-x-6 text-xl py-4 justify-center\",\n    twitter: true,\n    facebook: true,\n    linkedin: true,\n    pocket: true,\n    copy: true\n  }))), React.createElement(\"div\", {\n    className: \"text-center mb-24\"\n  }, React.createElement(PostImage, {\n    image: postImage\n  })), React.createElement(\"div\", {\n    className: \"lg:grid lg:grid-cols-9 lg:gaps-5\"\n  }, React.createElement(SocialSharing, {\n    url: url,\n    title: title,\n    hashtags: categories.join(\",\"),\n    description: description,\n    className: \"hidden lg:flex text-xl mt-12 flex-col lg:col-start-1 lg:col-end-3 top-[2rem] sticky self-start max-h-full overflow-y-auto space-y-6\",\n    twitter: true,\n    facebook: true,\n    linkedin: true,\n    pocket: true,\n    copy: true\n  }), React.createElement(\"article\", {\n    className: \"markdown lg:col-start-3 lg:col-end-8\",\n    ref: articleRef\n  }, React.createElement(MDXProvider, {\n    components: {}\n  }, children)), React.createElement(TableOfContents, {\n    className: \"hidden lg:block lg:col-span-2 mt-12 top-[2rem] sticky self-start text-xs font-semibold ml-12 mr-auto mb-6 overflow-y-auto max-h-full\",\n    items: tableOfContents.items,\n    ref: articleRef,\n    levels: tableOfContentsLevels\n  })), React.createElement(\"div\", {\n    className: \"my-8 max-w-lg md:max-w-2xl mx-auto\"\n  }, React.createElement(\"div\", {\n    className: \"block sm:flex flex-wrap items-center justify-center sm:justify-between\"\n  }, React.createElement(CategoryTags, {\n    className: \"my-8 justify-center\",\n    categories: categories\n  }), React.createElement(SocialSharing, {\n    url: url,\n    title: title,\n    hashtags: categories.join(\",\"),\n    description: description,\n    className: \"space-x-6 text-xl my-8 justify-center\",\n    twitter: true,\n    facebook: true,\n    linkedin: true,\n    pocket: true,\n    copy: true\n  })), React.createElement(\"div\", {\n    className: \"flex justify-around flex-wrap text-base mt-12 mb-24\"\n  }, React.createElement(\"div\", {\n    className: \"p-4 my-4 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded mr-auto w-full md:w-[49%]\"\n  }, React.createElement(Link, {\n    to: previous.slug,\n    className: \"site-link my-2 block\"\n  }, React.createElement(\"div\", {\n    className: \"flex items-start space-x-2\"\n  }, React.createElement(RiArrowLeftLine, {\n    className: \"block h-6 w-6\"\n  }), React.createElement(\"span\", null, previous.title)))), React.createElement(\"div\", {\n    className: \"p-4 my-4 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded ml-auto w-full md:w-[49%]\"\n  }, React.createElement(Link, {\n    to: next.slug,\n    className: \"site-link my-2 block text-right\"\n  }, React.createElement(\"div\", {\n    className: \"flex items-start space-x-2 justify-end\"\n  }, React.createElement(\"span\", null, next.title), React.createElement(RiArrowRightLine, {\n    className: \"block h-6 w-6\"\n  }))))), React.createElement(\"h5\", {\n    className: \"text-center mb-12\"\n  }, \"Written by\"), coAuthors.map(_ref4 => {\n    let {bio, name, initial, avatar, sns, yamlId} = _ref4;\n    return React.createElement(AuthorCard, {\n      className: \"p-8 mb-4 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded\",\n      key: yamlId,\n      bio: bio,\n      name: name,\n      initial: initial,\n      avatar: avatar,\n      sns: sns,\n      yamlId: yamlId\n    });\n  })), React.createElement(\"div\", {\n    className: \"my-24 max-w-lg sm:max-w-full mx-auto\"\n  }, React.createElement(\"h5\", {\n    className: \"mb-12 text-center\"\n  }, \"Related Posts\"), React.createElement(PostsGroup, {\n    posts: relatedPosts,\n    className: \"grid sm:grid-cols-3 row-auto auto-cols-auto gap-8\"\n  })));\n};\nconst pageQuery = \"2224090640\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","span","p","img","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","src","alt","wrapper","MDXLayout","PostImage","_ref","image","GatsbyImage","Post","_ref2","data","mdx","body","tableOfContents","frontmatter","author","coAuthors","title","date","categories","hero","description","keywords","fields","slug","timeToRead","relatedPosts","pageContext","tableOfContentsLevels","previous","next","children","articleRef","useRef","postImage","getImage","medium","siteUrl","useSiteMetadata","url","useLocation","authors","map","_ref3","yamlId","name","bio","sns","socialUrls","filter","s","SOCIAL_RESOURCES","DefaultLayout","postDescription","pageImage","images","fallback","pageUrl","postTitle","pageTitle","SelectionPopup","ref","ScrollVisibility","BackToTop","PostMeta","PostAuthors","SocialSharing","hashtags","join","twitter","facebook","linkedin","pocket","copy","MDXProvider","TableOfContents","items","levels","CategoryTags","Link","to","RiArrowLeftLine","RiArrowRightLine","_ref4","initial","avatar","AuthorCard","key","PostsGroup","posts","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}