{"version":3,"file":"component---node-modules-pitayan-gatsby-theme-pitayan-src-templates-post-index-tsx-content-file-path-content-posts-2023-05-05-ingress-reverse-proxy-index-mdx-8906295cfd395dd4d8f6.js","mappings":"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","sources":["webpack://www/./content/posts/2023-05-05-ingress-reverse-proxy/index.mdx","webpack://www/./node_modules/@pitayan/gatsby-theme-pitayan/src/templates/post/index.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"introduction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#introduction\",\n    \"aria-label\": \"introduction permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"While discussing reverse proxies with a colleague who was building out his home lab with Docker, the topic of SSL certificates and proxies came up. I mentioned that I use Kubernetes, cert-manager, and Let’s Encrypt to manage these components. However, this made me consider the fact that although most of my services are hosted within Kubernetes, there are still some that run on other platforms, including bare-metal.\"), \"\\n\", React.createElement(_components.p, null, \"As a result, I began to wonder if I should configure NGINX Proxy Manager or Traefik on Docker to manage certificates for these external services. Alternatively, could it be possible to leverage Kubernetes’ internal resource management capabilities for external resources as well?\"), \"\\n\", React.createElement(_components.p, null, \"The short answer is “You bet!” Let’s explore how we can accomplish this.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"components\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#components\",\n    \"aria-label\": \"components permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Components\"), \"\\n\", React.createElement(_components.p, null, \"To get this up and running, you will need a Kubernetes cluster with a working Ingress Controller and Cert-Manager installed.\"), \"\\n\", React.createElement(_components.p, null, \"A reverse proxy typically requires three manifests: Endpoint, Service, and Ingress. These manifests define the endpoints and services to be exposed by the Ingress Controller and the rules for routing traffic to them.\"), \"\\n\", React.createElement(_components.p, null, \"An Endpoint manifest defines the IP address and port of an external service. A Service manifest exposes the endpoint as a Kubernetes Service object, which can then be used by the Ingress Controller to route traffic to the endpoint.\"), \"\\n\", React.createElement(_components.p, null, \"Finally, an Ingress manifest defines the rules for routing traffic to the Service objects. It specifies the hostname, path, and other criteria for routing traffic to the appropriate Service object.\"), \"\\n\", React.createElement(_components.p, null, \"Below are example manifests for each of these components. Note that these are not intended to be copy-pasted directly, but rather serve as a starting point for building your own manifests that are specific to your environment and requirements.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"endpoint\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#endpoint\",\n    \"aria-label\": \"endpoint permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Endpoint\"), \"\\n\", React.createElement(_components.p, null, \"An endpoint is the network address of a pod that provides a specific service in the cluster. like a phone number that connects you to a specific person. Endpoints are dynamically created by Kubernetes based on the state of the pods in the cluster and they represent the availability of a particular service. When a service is created, it is associated with one or more endpoints. These endpoints are then used to direct traffic to the appropriate pod that is providing the service. In summary, an endpoint is a reference to a specific pod that is providing a service, and it’s used by Kubernetes to route traffic to the correct location.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">\\n<span class=\\\"token key atrule\\\">apiVersion</span><span class=\\\"token punctuation\\\">:</span> v1\\n<span class=\\\"token key atrule\\\">kind</span><span class=\\\"token punctuation\\\">:</span> Endpoints\\n<span class=\\\"token key atrule\\\">metadata</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> my<span class=\\\"token punctuation\\\">-</span>external<span class=\\\"token punctuation\\\">-</span>service\\n<span class=\\\"token key atrule\\\">subsets</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">addresses</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">ip</span><span class=\\\"token punctuation\\\">:</span> 10.1.2.3\\n    <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">port</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">80</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"service\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#service\",\n    \"aria-label\": \"service permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Service\"), \"\\n\", React.createElement(_components.p, null, \"In Kubernetes, a service is like a virtual front door that allows communication between different parts of a software application running on a cluster. Think of it like a receptionist who directs visitors to the right person or department. The service has a name and a fixed IP address that can be used by other parts of the application to communicate with it. It also helps to ensure that communication between different parts of the application is reliable and efficient, even if the underlying physical components change over time. In short, a Kubernetes service is an important tool for making sure that different parts of a software application can talk to each other effectively and without interruptions.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">\\n<span class=\\\"token key atrule\\\">apiVersion</span><span class=\\\"token punctuation\\\">:</span> v1\\n<span class=\\\"token key atrule\\\">kind</span><span class=\\\"token punctuation\\\">:</span> Service\\n<span class=\\\"token key atrule\\\">metadata</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> my<span class=\\\"token punctuation\\\">-</span>external<span class=\\\"token punctuation\\\">-</span>service\\n<span class=\\\"token key atrule\\\">spec</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">port</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">80</span>\\n      <span class=\\\"token key atrule\\\">targetPort</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">80</span>\\n  <span class=\\\"token key atrule\\\">selector</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">app</span><span class=\\\"token punctuation\\\">:</span> my<span class=\\\"token punctuation\\\">-</span>external<span class=\\\"token punctuation\\\">-</span>app\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"ingress\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#ingress\",\n    \"aria-label\": \"ingress permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Ingress\"), \"\\n\", React.createElement(_components.p, null, \"An Ingress manifest in Kubernetes is a configuration file that tells the cluster how to handle incoming internet traffic. It’s like a map that tells the cluster which web addresses and web pages to show to people who visit the website. It’s used to control how traffic flows into and out of the cluster, making it possible to manage multiple services and web pages from a single point of entry. It’s a way to make sure that the right web pages are shown to the right people, and it makes it possible to add things like security features and load balancing to the website.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yaml\\\"><pre class=\\\"language-yaml\\\"><code class=\\\"language-yaml\\\">\\n<span class=\\\"token key atrule\\\">apiVersion</span><span class=\\\"token punctuation\\\">:</span> networking.k8s.io/v1\\n<span class=\\\"token key atrule\\\">kind</span><span class=\\\"token punctuation\\\">:</span> Ingress\\n<span class=\\\"token key atrule\\\">metadata</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> my<span class=\\\"token punctuation\\\">-</span>ingress\\n  <span class=\\\"token key atrule\\\">annotations</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">cert-manager.io/cluster-issuer</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"letsencrypt-prod\\\"</span>\\n<span class=\\\"token key atrule\\\">spec</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">tls</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">hosts</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token punctuation\\\">-</span> my.domain.com\\n      <span class=\\\"token key atrule\\\">secretName</span><span class=\\\"token punctuation\\\">:</span> my<span class=\\\"token punctuation\\\">-</span>tls<span class=\\\"token punctuation\\\">-</span>secret\\n  <span class=\\\"token key atrule\\\">rules</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">host</span><span class=\\\"token punctuation\\\">:</span> my.domain.com\\n      <span class=\\\"token key atrule\\\">http</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token key atrule\\\">paths</span><span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token punctuation\\\">-</span> <span class=\\\"token key atrule\\\">path</span><span class=\\\"token punctuation\\\">:</span> /api\\n            <span class=\\\"token key atrule\\\">pathType</span><span class=\\\"token punctuation\\\">:</span> Prefix\\n            <span class=\\\"token key atrule\\\">backend</span><span class=\\\"token punctuation\\\">:</span>\\n              <span class=\\\"token key atrule\\\">service</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> my<span class=\\\"token punctuation\\\">-</span>external<span class=\\\"token punctuation\\\">-</span>service\\n                <span class=\\\"token key atrule\\\">port</span><span class=\\\"token punctuation\\\">:</span>\\n                  <span class=\\\"token key atrule\\\">name</span><span class=\\\"token punctuation\\\">:</span> http\\n\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"summary\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#summary\",\n    \"aria-label\": \"summary permalink\",\n    className: \"heading-anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<span>#</span>\"\n    }\n  })), \"Summary\"), \"\\n\", React.createElement(_components.p, null, \"In Kubernetes, an Ingress Controller is like a traffic cop at the entrance of a cluster. It controls incoming traffic and directs it to the appropriate services. When a request comes in from outside the cluster, the Ingress Controller uses information from the Ingress Manifest to determine how to route the traffic. The Ingress Manifest specifies the hostnames, paths, and ports that should be exposed, as well as the routing rules for directing traffic to the appropriate services.\"), \"\\n\", React.createElement(_components.p, null, \"To route traffic to external services, the Ingress Controller uses Endpoints and Services. An Endpoint is the network address of a pod that provides a specific service in the cluster. A Service is a logical entity that groups together a set of pods and provides a stable IP address and DNS name that other pods can use to access the service.\"), \"\\n\", React.createElement(_components.p, null, \"To connect to an external service, the Ingress Controller first creates a Service that points to the external service. The Service has a stable IP address that other pods can use to connect to the external service. Next, the Ingress Controller creates an Endpoint that maps the Service to the actual IP address and port of the external service. The Ingress Controller then uses this Endpoint to route traffic to the external service.\"), \"\\n\", React.createElement(_components.p, null, \"If you combine Cert-Manager with the Ingress Controller you can secure external traffic by automating the management and issuance of SSL certificates. The Ingress Manifest specifies the TLS configuration and Cert-Manager generates SSL certificates, stores them as Kubernetes Secrets, and the Ingress Controller uses them to terminate SSL connections and route traffic to the correct location within the Kubernetes cluster.\"), \"\\n\", React.createElement(_components.p, null, \"Please note that this post is a copy of the original article published on my blog at https://blog.antnsn.dev/2023-p2-ingress-as-a-reverse-proxy/. Check out my website for more content related to Cloud native, terraform and kubernetes.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/blog/blog/content/posts/2023-05-05-ingress-reverse-proxy/index.mdx\";\nimport React, {useRef} from \"react\";\nimport {Link} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {RiArrowLeftLine, RiArrowRightLine} from \"react-icons/ri\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {useLocation} from \"@reach/router\";\nimport DefaultLayout from \"@pitayan/gatsby-theme-pitayan/src/layouts/Default\";\nimport PostMeta from \"@pitayan/gatsby-theme-pitayan/src/components/PostMeta\";\nimport AuthorCard from \"@pitayan/gatsby-theme-pitayan/src/components/AuthorCard\";\nimport SocialSharing from \"@pitayan/gatsby-theme-pitayan/src/components/SocialSharing\";\nimport CategoryTags from \"@pitayan/gatsby-theme-pitayan/src/components/CategoryTags\";\nimport BackToTop from \"@pitayan/gatsby-theme-pitayan/src/components/BackToTop\";\nimport PostAuthors from \"@pitayan/gatsby-theme-pitayan/src/components/PostAuthors\";\nimport SelectionPopup from \"@pitayan/gatsby-theme-pitayan/src/components/SelectionPopup\";\nimport ScrollVisibility from \"@pitayan/gatsby-theme-pitayan/src/components/ScrollVisibility\";\nimport TableOfContents from \"@pitayan/gatsby-theme-pitayan/src/components/TableOfContents\";\nimport {useSiteMetadata} from \"@pitayan/gatsby-theme-pitayan/src/hooks\";\nimport {SOCIAL_RESOURCES} from \"@pitayan/gatsby-theme-pitayan/src/constants\";\nimport PostsGroup from \"@pitayan/gatsby-theme-pitayan/src/components/PostsGroup\";\nconst PostImage = _ref => {\n  let {image} = _ref;\n  return image ? React.createElement(GatsbyImage, {\n    className: \"gatsby-resp-image-image\",\n    image: image,\n    alt: \"\"\n  }) : null;\n};\nconst Post = _ref2 => {\n  let {data: {mdx: {body, tableOfContents, frontmatter: {author: coAuthors, title, date, categories, hero, description, keywords}, fields: {slug}, timeToRead, relatedPosts}}, pageContext: {tableOfContentsLevels, previous, next}, children} = _ref2;\n  const articleRef = useRef(null);\n  const postImage = getImage(hero === null || hero === void 0 ? void 0 : hero.medium);\n  const {siteUrl} = useSiteMetadata();\n  const {href: url} = useLocation();\n  const authors = coAuthors.map(_ref3 => {\n    let {id, yamlId, name, bio, sns} = _ref3;\n    const socialUrls = sns.filter(s => s[0] != \"mailto\" && s[0] != \"url\").map(s => {\n      const network = SOCIAL_RESOURCES[s[0]].url;\n      const profile = s[1];\n      return network + \"/\" + profile;\n    });\n    return {\n      id,\n      yamlId,\n      name,\n      bio,\n      socialUrls\n    };\n  });\n  return React.createElement(DefaultLayout, {\n    postDescription: description,\n    pageImage: postImage.images.fallback.src,\n    pageUrl: \"\" + siteUrl + slug,\n    postTitle: title,\n    pageTitle: title,\n    keywords: keywords,\n    date: date,\n    timeToRead: timeToRead,\n    authors: authors\n  }, React.createElement(SelectionPopup, {\n    ref: articleRef\n  }), React.createElement(\"div\", {\n    className: \"hidden md:block\"\n  }, React.createElement(ScrollVisibility, {\n    className: \"fixed right-[6%] bottom-[6%] flex flex-col justify-center z-50\"\n  }, React.createElement(BackToTop, null))), React.createElement(\"div\", {\n    className: \"max-w-lg md:max-w-2xl mx-auto mb-24\"\n  }, React.createElement(\"h1\", {\n    className: \"text-center\"\n  }, title), React.createElement(PostMeta, {\n    className: \"block mb-4 text-center\",\n    date: date,\n    timeToRead: timeToRead\n  }), React.createElement(\"div\", {\n    className: \"block sm:flex flex-wrap items-center justify-center sm:justify-between\"\n  }, React.createElement(PostAuthors, {\n    data: coAuthors\n  }), React.createElement(SocialSharing, {\n    url: url,\n    title: title,\n    hashtags: categories.join(\",\"),\n    description: description,\n    className: \"space-x-6 text-xl py-4 justify-center\",\n    twitter: true,\n    facebook: true,\n    linkedin: true,\n    pocket: true,\n    copy: true\n  }))), React.createElement(\"div\", {\n    className: \"text-center mb-24\"\n  }, React.createElement(PostImage, {\n    image: postImage\n  })), React.createElement(\"div\", {\n    className: \"lg:grid lg:grid-cols-9 lg:gaps-5\"\n  }, React.createElement(SocialSharing, {\n    url: url,\n    title: title,\n    hashtags: categories.join(\",\"),\n    description: description,\n    className: \"hidden lg:flex text-xl mt-12 flex-col lg:col-start-1 lg:col-end-3 top-[2rem] sticky self-start max-h-full overflow-y-auto space-y-6\",\n    twitter: true,\n    facebook: true,\n    linkedin: true,\n    pocket: true,\n    copy: true\n  }), React.createElement(\"article\", {\n    className: \"markdown lg:col-start-3 lg:col-end-8\",\n    ref: articleRef\n  }, React.createElement(MDXProvider, {\n    components: {}\n  }, children)), React.createElement(TableOfContents, {\n    className: \"hidden lg:block lg:col-span-2 mt-12 top-[2rem] sticky self-start text-xs font-semibold ml-12 mr-auto mb-6 overflow-y-auto max-h-full\",\n    items: tableOfContents.items,\n    ref: articleRef,\n    levels: tableOfContentsLevels\n  })), React.createElement(\"div\", {\n    className: \"my-8 max-w-lg md:max-w-2xl mx-auto\"\n  }, React.createElement(\"div\", {\n    className: \"block sm:flex flex-wrap items-center justify-center sm:justify-between\"\n  }, React.createElement(CategoryTags, {\n    className: \"my-8 justify-center\",\n    categories: categories\n  }), React.createElement(SocialSharing, {\n    url: url,\n    title: title,\n    hashtags: categories.join(\",\"),\n    description: description,\n    className: \"space-x-6 text-xl my-8 justify-center\",\n    twitter: true,\n    facebook: true,\n    linkedin: true,\n    pocket: true,\n    copy: true\n  })), React.createElement(\"div\", {\n    className: \"flex justify-around flex-wrap text-base mt-12 mb-24\"\n  }, React.createElement(\"div\", {\n    className: \"p-4 my-4 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded mr-auto w-full md:w-[49%]\"\n  }, React.createElement(Link, {\n    to: previous.slug,\n    className: \"site-link my-2 block\"\n  }, React.createElement(\"div\", {\n    className: \"flex items-start space-x-2\"\n  }, React.createElement(RiArrowLeftLine, {\n    className: \"block h-6 w-6\"\n  }), React.createElement(\"span\", null, previous.title)))), React.createElement(\"div\", {\n    className: \"p-4 my-4 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded ml-auto w-full md:w-[49%]\"\n  }, React.createElement(Link, {\n    to: next.slug,\n    className: \"site-link my-2 block text-right\"\n  }, React.createElement(\"div\", {\n    className: \"flex items-start space-x-2 justify-end\"\n  }, React.createElement(\"span\", null, next.title), React.createElement(RiArrowRightLine, {\n    className: \"block h-6 w-6\"\n  }))))), React.createElement(\"h5\", {\n    className: \"text-center mb-12\"\n  }, \"Written by\"), coAuthors.map(_ref4 => {\n    let {bio, name, initial, avatar, sns, yamlId} = _ref4;\n    return React.createElement(AuthorCard, {\n      className: \"p-8 mb-4 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded\",\n      key: yamlId,\n      bio: bio,\n      name: name,\n      initial: initial,\n      avatar: avatar,\n      sns: sns,\n      yamlId: yamlId\n    });\n  })), React.createElement(\"div\", {\n    className: \"my-24 max-w-lg sm:max-w-full mx-auto\"\n  }, React.createElement(\"h5\", {\n    className: \"mb-12 text-center\"\n  }, \"Related Posts\"), React.createElement(PostsGroup, {\n    posts: relatedPosts,\n    className: \"grid sm:grid-cols-3 row-auto auto-cols-auto gap-8\"\n  })));\n};\nconst pageQuery = \"2224090640\";\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","span","p","h3","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","PostImage","_ref","image","GatsbyImage","alt","Post","_ref2","data","mdx","body","tableOfContents","frontmatter","author","coAuthors","title","date","categories","hero","description","keywords","fields","slug","timeToRead","relatedPosts","pageContext","tableOfContentsLevels","previous","next","children","articleRef","useRef","postImage","getImage","medium","siteUrl","useSiteMetadata","url","useLocation","authors","map","_ref3","yamlId","name","bio","sns","socialUrls","filter","s","SOCIAL_RESOURCES","DefaultLayout","postDescription","pageImage","images","fallback","src","pageUrl","postTitle","pageTitle","SelectionPopup","ref","ScrollVisibility","BackToTop","PostMeta","PostAuthors","SocialSharing","hashtags","join","twitter","facebook","linkedin","pocket","copy","MDXProvider","TableOfContents","items","levels","CategoryTags","Link","to","RiArrowLeftLine","RiArrowRightLine","_ref4","initial","avatar","AuthorCard","key","PostsGroup","posts","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}